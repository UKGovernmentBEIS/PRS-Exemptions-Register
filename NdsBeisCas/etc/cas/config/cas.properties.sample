############### READ THIS!
# Properties are provided for running CAS locally ONLY.
# These properties are not used on test/live systems.  They are kept in a different repository for deployment by Jenkins.
# ie changing this file has no effect on anything but your local CAS instance (if you're running CAS locally).
# See also bootstrap.properties.
############### READ THIS!

cas.server.name: http://localhost:8090

# ideally don't change this - the client is configured against it
cas.server.prefix: ${server.name}/NdsBeisCas

# Only allow access to the admin pages from localhost
cas.adminPagesSecurity.ip=127\.0\.0\.1

logging.config: file:D:/source/beis/NdsBeisCas/etc/cas/config/log4j2.xml

##
# Single Sign-On Session
#
# Indicates whether an SSO session should be created for renewed authentication requests.
# create.sso.renewed.authn=true
#
# Indicates whether an SSO session can be created if no service is present.
cas.sso.missingService=false

# Decides whether SSO cookie should be created only under secure connections.
cas.tgc.secure=false

# The encryption secret keys
cas.tgc.crypto.encryption.key=
cas.tgc.crypto.signing.key=
cas.webflow.crypto.encryption.key=
cas.webflow.crypto.signing.key=
cas.authn.pm.reset.crypto.encryption.key=
cas.authn.pm.reset.crypto.signing.key=

# Blank out the demo feature
# IMPORTANT - THIS MUST BE __EMPTY__ ON ALL SYSTEMS.
cas.authn.accept.users=

# |o| TODO Richard? maybe Ben, setup throttling : https://apereo.github.io/cas/development/installation/Configuring-Authentication-Throttling.html
# cas.authn.throttle.usernameParameter=username
# cas.authn.throttle.startDelay=10000
# cas.authn.throttle.repeatInterval=20000
# cas.authn.throttle.appcode=CAS

# cas.authn.throttle.failure.threshold=100
# cas.authn.throttle.failure.code=AUTHENTICATION_FAILED
# cas.authn.throttle.failure.rangeSeconds=60


#Password Management
# Password policy for picking up expired accounts
cas.authn.pm.enabled=true
cas.authn.pm.autoLogin=false
cas.authn.pm.reset.expirationMinutes=1
cas.authn.pm.reset.emailAttribute=mail
cas.authn.pm.reset.securityQuestionsEnabled=false
cas.authn.pm.ldap.type=GENERIC
cas.authn.pm.ldap.ldapUrl=
cas.authn.pm.ldap.useSsl=false
cas.authn.pm.ldap.useStartTls=false
cas.authn.pm.ldap.connectTimeout=5000
cas.authn.pm.ldap.baseDn=ou=Tenants,ou=NDS,dc=northgateps,dc=com
cas.authn.pm.ldap.userFilter=userid=%s,ou=Users,ou=%s,ou=Tenants,ou=NDS,dc=northgateps,dc=com
cas.authn.pm.ldap.subtreeSearch=true
cas.authn.pm.ldap.bindDn=uid=nds,ou=Administrators,dc=northgateps,dc=com
cas.authn.pm.ldap.bindCredential=
cas.authn.pm.ldap.minPoolSize=3
cas.authn.pm.ldap.maxPoolSize=10
cas.authn.pm.ldap.validateOnCheckout=true
cas.authn.pm.ldap.validatePeriodically=true
cas.authn.pm.ldap.validatePeriod=600
cas.authn.pm.ldap.validateTimeout=5000
cas.authn.pm.ldap.failFast=true
cas.authn.pm.ldap.idleTime=500
cas.authn.pm.ldap.prunePeriod=600
cas.authn.pm.ldap.blockWaitTime=5000
cas.authn.pm.ldap.providerClass=org.ldaptive.provider.unboundid.UnboundIDProvider
nds.accountLock=pwdAccountLockedTime
nds.pwdPolicySubentry=pwdPolicySubentry

# LDAP
nds.authn.ldap[0].name=NdsLdapTenantAuthentication
nds.authn.ldap[0].ldapUrl=ldap://vm-nds-tst02:1389
nds.authn.ldap[0].useSsl=false
nds.authn.ldap[0].useStartTls=false
nds.authn.ldap[0].connectTimeout=5000
nds.authn.ldap[0].baseDn=ou=Tenants,ou=NDS,dc=northgateps,dc=com
nds.authn.ldap[0].enhanceWithEntryResolver=false
nds.authn.ldap[0].dnFormat=userid=%s,ou=Users,ou=%s,ou=Tenants,ou=NDS,dc=northgateps,dc=com
nds.authn.ldap[0].bindDn=uid=cas,ou=Administrators,dc=northgateps,dc=com
nds.authn.ldap[0].bindCredential=wibble
nds.authn.ldap[0].minPoolSize=3
nds.authn.ldap[0].maxPoolSize=10
nds.authn.ldap[0].validateOnCheckout=true
nds.authn.ldap[0].validatePeriodically=true
nds.authn.ldap[0].validatePeriod=600
nds.authn.ldap[0].failFast=true
nds.authn.ldap[0].idleTime=500
nds.authn.ldap[0].prunePeriod=600
nds.authn.ldap[0].blockWaitTime=5000
nds.authn.ldap[0].principalAttributeList=cn:NDS_CN,sn:NDS_SN,ndsRoleDN:NDS_ROLE_DN,o:NDS_o
nds.authn.ldap[0].tenantAttributeName=NDS_TENANT
# LDAP



nds.authn.ldap[0].usePasswordPolicy=true
nds.authn.ldap[0].passwordPolicy.loginFailures=5
nds.authn.ldap[0].passwordPolicy.displayWarningOnMatch=true
nds.authn.ldap[0].passwordPolicy.warnAll=true
nds.authn.ldap[0].passwordPolicy.warningDays=30

# For back-channel connections to the UI 
nds.httpClient.truststore.file=file:C:/git/beis/NdsBeisEsb/src/main/resources/config/certs/server-keystore.p12
nds.httpClient.truststore.psw=
nds.httpClient.truststore.type=PKCS12

# Logouts may follow redirects
cas.logout.followServiceRedirects=true

# TGT timeout - parameters needed to make hard timeout work
cas.ticket.tgt.timeToKillInSeconds=0
# TGT timeout - after this time the TGT will no longer be valid
# NB this is not the length of the user's web security session, that's controlled by the UI 
# NB Other timeout settings exist for more nuanced control.
# Here we have hard timeout since we only expect the UI to hit CAS once per session.
cas.ticket.tgt.hardTimeout.timeToKillInSeconds=30

# For controlling the loading of minified and versioned assets.
# NB these must be present (and empty is a valid value)
minify=
version=

# ESB Auditing
nds.audit.url= https://127.0.0.1:8443/NdsBeisEsb/userAccountAuditService/userAccountAuditService/userAccountAudit
nds.audit.keyStore_file=D:\\source\\beis\\beis\\NdsBeisCas\\src\\main\\resources\\config\\certs\\client-keystore.p12
nds.audit.keyStore_password=
nds.audit.keyStore_type=PKCS12
nds.audit.trustStore_file=D:\\source\\beis\\beis\\NdsBeisCas\\src\\main\\resources\\config\\certs\\ca-truststore.p12
nds.audit.trustStore_password=
nds.audit.trustStore_type=PKCS12

# Mongo backed ticket registry to enable clustering
nds.ticketRegistryMongo.hosts=
nds.ticketRegistryMongo.ports=
nds.ticketRegistryMongo.userId=
nds.ticketRegistryMongo.password=
nds.ticketRegistryMongo.databaseName=nds_db
nds.ticketRegistryMongo.replicaset=none
nds.ticketRegistryMongo.maxConnections=100

#application phase TEST /LIVE
nds.applicationPhase=TEST

#Feedback email address
nds.feedbackEmail = beis@northgateps.com

cas.authn.pm.reset.crypto.encryption.key=
cas.authn.pm.reset.crypto.signing.key=
cas.tgc.crypto.encryption.key=
cas.tgc.crypto.signing.key=
cas.webflow.crypto.signing.key=
cas.webflow.crypto.encryption.key=

# auto-reload Spring Web Flow config, set to false for production, true for development
cas.webflow.refresh=true