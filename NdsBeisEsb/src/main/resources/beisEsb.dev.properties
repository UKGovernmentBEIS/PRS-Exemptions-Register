 ## Procedure for adding Properties:
##
## 	1. Add the property you require here. If it includes something which is likely to be environment specific
##	   for example, a server name, split this into 2 properties. The first should be the environment specific
##     setting, and the 2nd, which includes the first property, should be the common definition. For example
##     a URL consists of several parts, only the hostname and port are likely to be specific to an particular
##     environment, so these should be split out:
##        myserver = ahostname:800
##        myurl = http://{$myserver}/part/to/resource
##  2. Tell the Dev Ops team of the new keys and values, and if the values are specific to an environment
##     tell them the values for both auto and manual tests.

## ANY CHANGES TO THIS FILE MUST BE COMMUNICATED TO THE DEVOPS TEAM SO THAT THE RELEASES CAN INCLUDE THESE CHANGES ###

# pre-load the JAXB Context objects on startup using NdsJaxbContext (set to true on real servers)  
nds.jaxbcontext.load = false

# Back office BEIS aka Foundation Layer aka FL server
beis.server=
beis.protocol=
beis.port=
#beis.port=
beis.userId=
beis.secret=

app.publicBaseWebAddress = http://localhost
app.IndexPageUrl = ${app.publicBaseWebAddress}/NdsBeisUi/

#smtp.host.server examples :
# normal : smtp.host.server=
# smtp auth : smtp.host.server=
# requiring STARTTLS (smtpSslContext must be set in camel registry) :
# smtp.host.server=
smtp.host.server=
smtp.from = noreply@northgateps.com
website = PRS exemptions register
registrationLinkLabel = Activate your account

apiGetPartiallyRegisteredDetailsEndpoint=cxfrs://bean://getPartiallyRegisteredDetailsService?bindingStyle=SimpleConsumer
apiRegistrationEndpoint=cxfrs://bean://registrationService?bindingStyle=SimpleConsumer
apiActivateRegistrationEndpoint=cxfrs://bean://activateRegistrationService?bindingStyle=SimpleConsumer
apiPasswordResetEndpoint=cxfrs://bean://passwordResetService?bindingStyle=SimpleConsumer
apiActivatePasswordResetEndpoint=cxfrs://bean://activatePasswordResetService?bindingStyle=SimpleConsumer
apiChangePasswordEndpoint=cxfrs://bean://changePasswordService?bindingStyle=SimpleConsumer
apiUpdateEmailEndpoint=cxfrs://bean://updateEmailService?bindingStyle=SimpleConsumer
apiGenerateReferenceEndpoint=cxfrs://bean://generateReferenceService?bindingStyle=SimpleConsumer
apiForgottenUsernameEndpoint=cxfrs://bean://forgotUsernameService?bindingStyle=SimpleConsumer
apiRetrieveRegisteredDetailsEndpoint=cxfrs://bean://retrieveRegisteredDetailsService?bindingStyle=SimpleConsumer
apiRetrieveRegisteredUserDetailsEndpoint=cxfrs://bean://retrieveRegisteredUserDetailsService?bindingStyle=SimpleConsumer
apiSaveRegisteredAccountDetailsEndpoint=cxfrs://bean://saveRegisteredAccountDetailsService?bindingStyle=SimpleConsumer
apiPrintExemptionDetailsEndpoint=cxfrs://bean://printExemptionDetailsService?bindingStyle=SimpleConsumer
apiBeisRegistrationEndpoint = cxfrs://bean://beisregistrationService?bindingStyle=SimpleConsumer
apiDashboardEndpoint=cxfrs://bean://dashboardService?bindingStyle=SimpleConsumer
apiRegisterPrsExemptionEndpoint=cxfrs://bean://registerPrsExemptionService?bindingStyle=SimpleConsumer
apiSaveRegisteredUserDetailsEndpoint=cxfrs://bean://saveRegisteredUserDetailsService?bindingStyle=SimpleConsumer
apiPRSExemptionSearchEndpoint=cxfrs://bean://prsExemptionSearchService?bindingStyle=SimpleConsumer
apiGetPrsExemptionRefData = cxfrs://bean://getPrsExemptionRefDataService?bindingStyle=SimpleConsumer
apiPRSPenaltySearchEndpoint=cxfrs://bean://prsPenaltySearchService?bindingStyle=SimpleConsumer
apiPRSExemptionUpdateEndpoint=cxfrs://bean://prsExemptionUpdateService?bindingStyle=SimpleConsumer
apiViewDocumentGDIPGDAREndpoint=cxfrs://bean://viewDocumentGdarGdipService?bindingStyle=SimpleConsumer
apiGetReferenceValuesEndpoint = cxfrs://bean://getReferenceValuesService?bindingStyle=SimpleConsumer
apiGetPrsPenaltyRefData = cxfrs://bean://getPrsPenaltyRefDataService?bindingStyle=SimpleConsumer
apiDeleteUserLdapDetailsPlatformEndpoint = direct:startDeleteLdapDetails
apiUserAccountAuditEndpoint=cxfrs://bean://userAccountAuditService?bindingStyle=SimpleConsumer
apiLogEventEndpoint=cxfrs://bean://logEventService?bindingStyle=SimpleConsumer

# File Read/delete/add operation
apiFileAddService=cxfrs://bean://fileAddService?bindingStyle=SimpleConsumer
apiFileDeleteService=cxfrs://bean://fileDeleteService?bindingStyle=SimpleConsumer
apiFileReadService=cxfrs://bean://fileReadService?bindingStyle=SimpleConsumer

#This url is constructed using the url to the ESB and the activate registration jsp page name
registration.activationUrl=${app.IndexPageUrl}/account-activation
registration.forgottenPasswordUrl=${app.IndexPageUrl}/report-forgotten-password
registration.termsConditionsUrl=${app.IndexPageUrl}/terms-and-conditions

#Scottish,Northern Ireland postcode regex 
exemption.excludedPostcodes = ^(AB|BT|DD|DG|EH|FK|G|HS|IV|KA|KW|KY|ML|PA|PH|TD|ZE)[0-9]

#Email template file name
email.templatename = BeisEmailTemplate.xml

#contact email for privacy policy page
contactInfoEmail.address = tobedetailed@beis.gov.uk

#This url is used for Populating value from csv file  - Start
beis.csvConstraintsFilePath=fromClassPath(config/ConstrainedValues.csv)
apiGetConstrainedValuesService=cxfrs://bean://getConstrainedValuesService?bindingStyle=SimpleConsumer
#End
#This url is constructed using the url to the ESB and the index page name

signin.url=${app.IndexPageUrl}/personalised-dashboard

# End points for back office FL layer beis services
beis.maintainPartyDetailsApiUrl=${beis.protocol}://${beis.server}:${beis.port}/communication/MaintainPartyDetailsRequest
beis.getPartyDetailsApiUrl=${beis.protocol}://${beis.server}:${beis.port}/communication/GetPartyDetailsRequest
beis.registerPrsExemptionApiUrl = ${beis.protocol}://${beis.server}:${beis.port}/communication/RegisterPRSExemptionRequest
beis.getPrsAccountExemptionsApiUrl=${beis.protocol}://${beis.server}:${beis.port}/communication/GetPRSExemptionsRequest
beis.getPrsExemptionRefDataApiUrl = ${beis.protocol}://${beis.server}:${beis.port}/communication/GetPRSExemptionReferenceData
beis.prsExemptionSearchServiceApiUrl=${beis.protocol}://${beis.server}:${beis.port}/communication/PRSExemptionSearch
beis.prsExemptionUpdateServiceApiUrl=${beis.protocol}://${beis.server}:${beis.port}/communication/UpdatePRSExemptionRequest
beis.viewDocumentGDIPGDARServiceApiUrl = ${beis.protocol}://${beis.server}:${beis.port}/communication/ViewDocumentGDIPGDAR
beis.prsPenaltySearchServiceApiUrl=${beis.protocol}://${beis.server}:${beis.port}/communication/GetPRSPenaltySearch
beis.getReferenceValuesApiUrl = ${beis.protocol}://${beis.server}:${beis.port}/communication/getReferenceValues
beis.getPrsPenaltyRefDataApiUrl = ${beis.protocol}://${beis.server}:${beis.port}/communication/GetPRSPenaltyReferenceData

app.passwordResetExpiryHours=48
app.registrationExpiryHours=48

#days records will be deleted after
purgePeriodOrphanedFiles = 1
#run the purge after this many hours
purgeIntervalPeriod = 24
#interval for timer period
timerPeriod= 24h
#days audit records will be deleted after
purgeAuditRecordsPeriod = 90

#Application specific GridFS bucket name
ndsdb.gridfs.collection.name=beisfs


#Properties required to connect to an LDAP
ldap.url=
ldap.useStartTLS=true
ldap.uid=
ldap.password=

# Where to find things in LDAP
ldap.data.baseDn=ou=Tenants,ou=NDS,dc=northgateps,dc=com
ldap.data.serviceCnToPrefix=cn=[servicename],
ldap.mail.search.baseDn=ou=Users,ou=[tenant],${ldap.data.baseDn}
ldap.user.dn=uid=[userid],ou=Users,ou=[tenant],${ldap.data.baseDn}
ldap.config.baseDn=ou=Tenants,dc=northgateps,dc=com
ldap.template.userDn=uid=template_nds_username,ou=TemplateUsers,uid=[tenant],${ldap.config.baseDn}
ldap.template.standardUser=template_nds_username
ldap.ndsUser=ndsUser
# Maximum number of times to retry connecting to LDAP before giving up, -1 means retry indefinitely
ldap.maxRetries=5
# The number of milliseconds to wait before retrying to connect after a failure
ldap.retryWait=3000
# The factor to apply to ldap.retryWait for successive retries, set to 1 to use ldap.retryWait each time
ldap.retryBackoff=2
# Whether or not to verify the secure connection to LDAP against a public key cert
ldap.certificate.skipChecking=true
# Path to the public key PEM for the LDAP server's certificate issuer
ldap.certificate.path=C:\git\beis\NdsEnvironment\environment\develop\certs\ca\vm-nds-tst03\ca-key-cert.pem

service.ndsService.name=NDS_SERVICE
service.foundationLayerPartyService.name=FOUNDATION_LAYER_PARTY_SERVICE

attribute.userid=uid
attribute.password=userPassword
attribute.email=mail
attribute.activationCode=ndsActivationCode
attribute.ndsPasswordResetCode=ndsPasswordResetCode
attribute.nsAccountLock=pwdAccountLockedTime
attribute.pwdPolicySubentry=pwdPolicySubentry
attribute.forename=cn
attribute.middleName=middleName
attribute.surname=sn
attribute.homePhone=homePhone
attribute.mobile=mobile
attribute.street=street
attribute.street2=street2
attribute.town=town
attribute.county=county
attribute.country=country
attribute.postalCode=postalCode
attribute.uprn=uprn
attribute.organisationName=o

# date in the past to set on attribute.nsAccountLock to unlock the account
attribute.value.accountUnLock=19950926112120.849Z

# add a uuid to this objectClass/attribute when creating new users
# may be left blank or omitted if not needed
attribute.newUser.uuid=ndsServiceAccount/uid

######################################################################################################################
### Properties for configuring QAS/EDQ (Experian Data Quality) third-party Data Source provider for Address Search ###
######################################################################################################################
# At present two versions of QAS/EDQ web services are integrated and supported,
#    1. QAS ProWeb - web service hosted locally, version http://www.qas.com/web-2009-08
#    2. QAS Pro On-demand - web services hosted on Cloud, version http://www.qas.com/OnDemand-2011-03
# Based on the value configured in address.search.provider, NDS Platform will then use the required web service
# to fetch data from QAS. The address.search.provider is also configured in addreSearch-routeContext.xml file.

##### Configuration for QAS PROWEB, http://www.qas.com/web-2009-08 (Web based locally hosted web service) ######
#address.search.provider=QASPROWEB

# Host name/IP address and port number
#address.search.server=

# Endpoint/Address URL
#address.search.service.addressSearchUrl=http://${address.search.server}/proweb.wsdl
#address.search.service.addressDetailUrl=http://${address.search.server}/proweb.wsdl

# Layout is the format in which data will be sent back to NDS Platform by QAS web service.
# Valid layouts are "Database layout", "Barcode", "Strict Postal", "BlueBadge", "NES" for other layout kindly refer QAS technical documents
#address.search.qas.layout=BlueBadge

# DataIdType, defines the data mapping to be used to search against, e.g. "GBR" would search for addresses in the United Kingdom data.
# Valid data ID type are, "GBR", "APR", "AUE" for other countries kindly refer QAS technical documents
#address.search.qas.dataIdType=GBR

# OperationNamespace
#address.search.qas.operationNameSpace=http://www.qas.com/web-2009-08

# REST interface for DoSearch operation
#address.search.doSearchEndpoint=cxfrs://bean://addressSearchService?bindingStyle=SimpleConsumer

# REST interface for DoGetAddress operation 
#address.search.doGetAddressEndpoint=cxfrs://bean://specificAddressSearchService?bindingStyle=SimpleConsumer
############################################################################################################################

##### Configuration for QAS PRO ON-DEMAND, http://www.qas.com/OnDemand-2011-03 (Web based Cloud hosted web service) ######
#address.search.provider=QASONDEMAND

# Endpoint/Address URL
#address.search.service.addressSearchUrl=https://ws.ondemand.qas.com/ProOnDemand/V3/ProOnDemandService.asmx
#address.search.service.addressDetailUrl=https://ws.ondemand.qas.com/ProOnDemand/V3/ProOnDemandService.asmx

# Layout is the format in which data will be sent back to NDS Platform by QAS web service.
# Valid layouts are "Database layout", "Northgatesteps", "Northgatesteps1" for other layout kindly refer QAS technical documents
# Following layout is for APR, default data set
#address.search.qas.apr.layout=NorthgateAPR1
# Following layout is for GBR data set
#address.search.qas.gbr.layout=Northgatesteps


# DataIdType, defines the data mapping to be used to search against, e.g. "GBR" would search for addresses in the United Kingdom data.
# Valid data ID type are, "GBR", "APR", "AUE" for other countries kindly refer QAS technical documents
# For Cloud QAS service default data set to be used is of APR (Addressbase)
#address.search.qas.default.dataIdType=APR
#address.search.qas.dataIdType=GBR

# Authentication Token key and value
#address.search.qas.auth.token.key=Auth-Token
#address.search.qas.auth.token.value=9c458fbe-deda-49ae-bff0-d6bb4b3699c2

# OperationNamespace
#address.search.qas.operationNameSpace=http://www.qas.com/OnDemand-2011-03

# REST interface for DoSearch operation
#address.search.doSearchEndpoint=cxfrs://bean://addressSearchService?bindingStyle=SimpleConsumer

# REST interface for DoGetAddress operation
#address.search.doGetAddressEndpoint=cxfrs://bean://specificAddressSearchService?bindingStyle=SimpleConsumer
############################################################################################################################

##### Configuration for Northgate Addresses, v1.0 (Web based locally hosted web service) ######
address.search.provider=NAS

# Host name/IP address and port number
address.search.server=

# Authentication to NAS server
address.search.nas.secret=${beis.secret}
address.search.nas.userid=${beis.userId}

# Endpoint/Address URLs
address.search.service.addressSearchUrl=${address.search.server}/communication/AddressSearch
address.search.service.addressDetailUrl=${address.search.server}/communication/GetAddressDetail

# Maximum number of results to return, the service will return this +1 if there are more results.
# Valid numbers are any integer, though a value of less than 1 would be pointless.
address.search.nas.maximum.search.results=200

# OperationNamespace
address.search.nas.searchOperationNamespace=http://www.northgateps.com/NASAddressSearch.wsdl
address.search.nas.detailOperationNamespace=http://www.northgateps.com/NASAddressDetail.wsdl

# REST interface for DoSearch operation
address.search.doSearchEndpoint=cxfrs://bean://addressSearchService?bindingStyle=SimpleConsumer

# REST interface for DoGetAddress operation
address.search.doGetAddressEndpoint=cxfrs://bean://specificAddressSearchService?bindingStyle=SimpleConsumer
############################################################################################################################

################### NoSQLDB REST INTERFACE ##############################
# Set this to indicate NoSQLDb related parameter used by REST interface.
ndsdb.server=
ndsdb.port=
ndsdb.user=
ndsdb.type.code=BEIS
ndsdb.name=nds_db
ndsdb.password=
ndsdb.protocol=SSL
ndsdb.admin.db.name=admin
ndsdb.collection.name=BEIS_APP_DATA
ndsdb.collection.indexKey=NDSRECORD.REFERENCEID
ndsdb.max.connection=100
ndsdb.replicaset=none
ndsdb.retryCount=10
ndsdb.socket.timeout=5000

#user account auditing
ndsdb.audit.collection.name = NDS_AUDIT_DATA

#Event logs
ndsdb.event.collection.name = NDS_EVENTS_DATA

# ReferenceId Generation Config 
generate.reference.cache = generateReferenceCache
generate.reference.range=1000
generate.reference.range.collection.name=BEIS_SEQ_SERIES
generate.reference.id.abbr=E
generate.reference.id.pads=8
generate.reference.id.padwith=0
generate.reference.id.random.str.length=5
