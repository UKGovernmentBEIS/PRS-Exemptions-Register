<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<groupId>com.northgateps.beis</groupId>
	<artifactId>beis-esb</artifactId>
	<version>0.0.0</version>
	<packaging>war</packaging>
	<url>${homepage.url}beis-esb/</url>

	<name>NDS Beis ESB</name>
	<description>
		Northgate Public Services Digital Service Beis POM (ESB)
	</description>
	<organization>
		<name>Northgate Public Services</name>
		<url>http://www.northgatepublicservices.co.uk/</url>
	</organization>

	<distributionManagement>
		<site>
			<id>www.northgatepublicservices.co.uk/nds/beis</id>
			<url>${distro.url}beis-esb/</url>
		</site>
	</distributionManagement>

	<parent>
		<groupId>com.northgateps.nds.sharedpoms</groupId>
		<artifactId>sharedpoms-esb</artifactId>
		<version>0.0.0-SNAPSHOT</version>
		<relativePath />
	</parent>

	<properties>
		<nds.beis.version>[0.0.0,1.0.0)</nds.beis.version>
		<nds.platform.version>0.0.0-SNAPSHOT</nds.platform.version>
		<jsoup.version>1.15.3</jsoup.version>
	</properties>

	<dependencies>
		<dependency>
	       	<groupId>com.northgateps.nds.platform</groupId>
			<artifactId>platform-shared</artifactId>
			<version>${nds.platform.version}</version>
<!-- 			<scope>compile</scope> -->
		</dependency>
		<dependency>
			<groupId>com.northgateps.nds.platform</groupId>
			<artifactId>platform-esb</artifactId>
			<version>${nds.platform.version}</version>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-fop</artifactId>
			<version>${camel.version}</version>
			<exclusions>
				<exclusion>
					<groupId>com.sun.media</groupId>
					<artifactId>jai-codec</artifactId>
				</exclusion>
				<exclusion>
					<groupId>javax.media</groupId>
		            <artifactId>jai-core</artifactId>
				</exclusion>
	            <!-- stop xml-apis being included again! Already in jre and java silly module system doesn't allow that -->
				<exclusion>
					<groupId>xml-apis</groupId>
					<artifactId>xml-apis</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-main</artifactId>
			<version>${camel.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-cxf-soap</artifactId>
			<version>${camel.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-cxf-rest</artifactId>
			<version>${camel.version}</version>
		</dependency>
<!-- https://mvnrepository.com/artifact/org.apache.cxf/cxf-testutils -->
<dependency>
    <groupId>org.apache.cxf</groupId>
    <artifactId>cxf-testutils</artifactId>
    <version>3.4.10</version>
    <scope>test</scope>
</dependency>
<!-- https://mvnrepository.com/artifact/org.apache.camel/camel-jackson -->
<dependency>
    <groupId>org.apache.camel</groupId>
    <artifactId>camel-jackson</artifactId>
    <version>${camel.version}</version>
</dependency>
<!-- https://mvnrepository.com/artifact/org.apache.camel/camel-stream -->
<dependency>
    <groupId>org.apache.camel</groupId>
    <artifactId>camel-stream</artifactId>
    <version>${camel.version}</version>
</dependency>
		
		
		<dependency>
			<groupId>org.bouncycastle</groupId>
			<artifactId>bcprov-jdk15on</artifactId>
			<version>${org.bouncycastle.version}</version>
			<scope>runtime</scope>
		</dependency>

		<dependency>
			<groupId>org.apache.camel</groupId>
			<artifactId>camel-test-spring</artifactId>
			<version>${camel.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.northgateps.nds.platform</groupId>
			<artifactId>platform-esb-test</artifactId>
			<version>${nds.platform.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>org.jsoup</groupId>
			<artifactId>jsoup</artifactId>
			<version>${jsoup.version}</version>
		</dependency>
		
		<dependency>
			<groupId>com.northgateps.beis</groupId>
			<artifactId>beis-backofficeservice</artifactId>
			<version>${nds.beis.version}</version>
			<scope>compile</scope>
  			<exclusions>
				<exclusion>
				    <groupId>javax.xml</groupId>
				    <artifactId>jaxp-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.northgateps.beis</groupId>
			<artifactId>beis-shared-model</artifactId>
			<version>${nds.beis.version}</version>
			<scope>compile</scope>
		</dependency>

		 <!-- https://search.maven.org/#artifactdetails%7Ccom.googlecode.owasp-java-html-sanitizer%7Cowasp-java-html-sanitizer%7C20160924.1%7Cjar -->
    	<dependency>
        	<groupId>com.googlecode.owasp-java-html-sanitizer</groupId>
        	<artifactId>owasp-java-html-sanitizer</artifactId>
        	<version>20220608.1</version>
    	</dependency>

        <!-- probably ought to be in the platform esb -->
        <dependency>
            <groupId>xalan</groupId>
            <artifactId>xalan</artifactId>
            <version>2.7.2</version>
            <!-- stop xml-apis being included again! Already in jre and java silly module system doesn't allow that -->
   			<exclusions>
				<exclusion>
					<groupId>xml-apis</groupId>
					<artifactId>xml-apis</artifactId>
				</exclusion>
			</exclusions>
        </dependency>
        
	    <dependency>
	        <groupId>org.apache.camel</groupId>
	        <artifactId>camel-jaxb</artifactId>
	        <version>${camel.version}</version>
	    </dependency>

		<!-- These are needed now to unmarshall responses apparently -->
		<dependency>
		    <groupId>com.sun.xml.ws</groupId>
		    <artifactId>jaxws-rt</artifactId>
		    <version>3.0.2</version><!-- v4 stops ESB starting up, it can't find the config.. so use v3 -->
   			<exclusions>
				<exclusion>
				    <groupId>com.sun.mail</groupId>
   					<artifactId>jakarta.mail</artifactId>
				</exclusion>
			</exclusions>  
		</dependency>

		<dependency>
		    <groupId>javax.activation</groupId>
		    <artifactId>activation</artifactId>
		    <version>1.1.1</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<!-- this configures the WAR file -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
				<version>${maven.war.plugin.version}</version>
				<configuration>
					<webXml>src\main\webapp\WEB-INF\web.xml</webXml>
					
					<!-- The dev properties files are excluded so that they don't get to the test/live servers where they can be confusing. -->
					<!-- If you need to run the war file locally outside of Eclipse, you'll need to add the properties file manually. --> 
					
					<packagingExcludes>**/*.p12, **/*.dev.properties, **/*.pem</packagingExcludes>
					
				</configuration>
			</plugin>
			
			<!--  tell the unit tests where to find our additional resources -->			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
        		<configuration>
					<additionalClasspathElements>
						<additionalClasspathElement>${basedir}/src/test/java</additionalClasspathElement>
					</additionalClasspathElements>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>${maven.resources.plugin.version}</version>
				<executions>
					<execution>
						<!-- Copy the public key for the LDAP CA -->
						<id>copy-root-ca-cert</id>
						<phase>validate</phase>
						<goals><goal>copy-resources</goal></goals>
						<configuration>
							<outputDirectory>${basedir}/classes/config/certs/</outputDirectory>
							<resources>
								<resource>
									<directory>${basedir}/../NdsEnvironment/environment/develop/certs/ca/vm-nds-tst03</directory>
									<includes>
										<include>ca-key-cert.pem</include>
									</includes>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			
		</plugins>
	</build>
	
    <profiles>
        <!--This plugin's configuration is used to store Eclipse m2e settings only. 
            It has no influence on the Maven build itself. -->
        <profile>
            <id>only-eclipse</id>
            <activation>
                <property>
                    <name>m2e.version</name>
                </property>
            </activation>
            <build>
                <pluginManagement>
                    <plugins>
                        <plugin>
                            <groupId>org.eclipse.m2e</groupId>
                            <artifactId>lifecycle-mapping</artifactId>
                            <version>1.0.0</version>
                            <configuration>
                                <lifecycleMappingMetadata>
                                    <pluginExecutions>
                                        <!-- 
                                            Tells Eclipse to run the AspectJ weaving as part of its builds so the logging system 
                                            will still work in Tomcat after a Maven Update (Alt+F5 in Eclipse) 
                                        -->
                                        <pluginExecution>
                                            <pluginExecutionFilter>
                                                <groupId>org.codehaus.mojo</groupId>
                                                <artifactId>aspectj-maven-plugin</artifactId>
                                                <versionRange>[${aspectj.maven.plugin.version},)</versionRange>
                                                <goals>
                                                    <goal>compile</goal>
                                                </goals>
                                            </pluginExecutionFilter>
                                            <action>
                                                <execute>
                                                    <!-- 
                                                        If this plugin is causing performance issues on Eclipse, set this to false.
                                                        However you may then need to run the plugin manually (
                                                        eg build from the command line) to ensure the logging 
                                                        system is weaved in. 
                                                      -->
                                                    <runOnIncremental>false</runOnIncremental>
                                                    <runOnConfiguration>true</runOnConfiguration>
                                                </execute>
                                            </action>
                                        </pluginExecution>
                                    </pluginExecutions>
                                </lifecycleMappingMetadata>
                            </configuration>
                        </plugin>
                    </plugins>
                </pluginManagement>
            </build>
        </profile>
    </profiles>

</project>
